const cors = require('cors');
const express = require('express');
const morgan = require('morgan');
const fileUpload = require('express-fileupload');
const scanRouter = require('./routes/scan');


async function makeServer(cfg) {
  try {
  
    const PORT = process.env.APP_PORT || 3000;
    const app = express();

    app.use(cors());
    app.use((req, res, next) => {
      res.header('Access-Control-Allow-Origin', '*');
      res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');
      next();
    });
    app.use(fileUpload({ ...cfg.fuConfig }));
    process.env.NODE_ENV !== 'test' &&
      app.use(morgan(process.env.APP_MORGAN_LOG_FORMAT || 'combined'));
    app.use('/api', scanRouter);
    app.all('*', (req, res, next) => {
      res.status(405).json({ success: false, data: { error: 'Not allowed.' } });
    });

    const srv = app.listen(PORT, () => {
      process.env.NODE_ENV !== 'test' &&
        console.log(`Server started on PORT: ${PORT}`);
    });

    return srv;
  } catch (error) {
    throw new Error(` ${error}`);
  }
}

module.exports = { makeServer };
